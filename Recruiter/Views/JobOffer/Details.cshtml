@model Recruiter.Models.JobOfferDetailsViewModel

@{
    ViewData["Title"] = "Offer";
}

<h2>Details</h2>

<div class="row page-box">
    <h1>@Model.Offer.JobTitle</h1>
    <div class="col-sm-8">
        <div class="model-description" id="previewMarkdown">
            @Model.Offer.Description
        </div>
    </div>
    <hr />
    <div class="col-sm-4">
        <div class="offer-details">
            <div>
                <label>@Html.DisplayNameFor(model => model.Offer.Company)</label>
                <span>@Html.DisplayFor(model => model.Offer.Company.Name)</span>
            </div>
            <div>
                <label>@Html.DisplayNameFor(model => model.Offer.Location)</label>
                <span>@Html.DisplayFor(model => model.Offer.Location)</span>
            </div>
            @if (Model.Offer.SalaryFrom.HasValue)
            {
                <div>
                    <label>@Html.DisplayNameFor(model => model.Offer.SalaryFrom)</label>
                    <span>@Html.DisplayFor(model => model.Offer.SalaryFrom)</span>
                </div>
            }
            @if (Model.Offer.SalaryTo.HasValue)
            {
                <div>
                    <label>@Html.DisplayNameFor(model => model.Offer.SalaryTo)</label>
                    <span>@Html.DisplayFor(model => model.Offer.SalaryTo)</span>
                </div>
            }
            <div>
                <label>@Html.DisplayNameFor(model => model.Offer.Created)</label>
                <span>@Html.DisplayFor(model => model.Offer.Created)</span>
            </div>
            @if (Model.Offer.ValidUntil.HasValue)
            {
                <div>
                    <label>@Html.DisplayNameFor(model => model.Offer.ValidUntil)</label>
                    <span>@Model.Offer.ValidUntil.Value.Subtract(DateTime.Now).Days days (@Model.Offer.ValidUntil)</span>
                </div>
            }
                <div>
                    @Html.ActionLink("Apply now", "Create", "JobApplications", new { offerId = Model.Offer.Id }, new { @class = "btn btn-primary" })
                    @if (User.Identity.IsAuthenticated)
                    {
                        if (User.IsInRole("Admins"))
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = Model.Offer.Id }, new { @class = "btn btn-primary" })
                            @using (Html.BeginForm("Delete", "JobOffer", new { id = Model.Offer.Id }, FormMethod.Post, null, new { style = "display:inline;" }))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger">Delete</button>
                            }
                        }
                    }
                        </div>
        </div>
    </div>

</div>
@if (User.Identity.IsAuthenticated)
{
    if (User.IsInRole("Admins"))
    {
        <div class="row page-box">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Applications.First().PhoneNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Applications.First().EmailAddress)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="applicationsList"></tbody>
            </table>
            <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.min.js"></script>
            <script>
        var uri = '../../api/applications/'+@Model.Offer.Id;

        $(document).ready(function () {
            // Send an AJAX request
            $.getJSON(uri)
                .done(function (data) {
                    // On success, 'data' contains a list of products.
                    $.each(data, function (key, item) {
                        // Add a list item for the product.
                        $(`<tr>
                            <td><a href="../../JobApplications/Details/${item.id}">${item.firstName} ${item.lastName}</a></td>
                            <td>${item.phoneNumber}</td>
                            <td>${item.emailAddress}</td></tr>`).appendTo($('#applicationsList'));
                    });
                });
        })
            </script>
        </div>
    }
}
        <div>
            @Html.ActionLink("Return to job offers", "Index", "JobOffer", null, new { @class = "btn btn-primary" })
        </div>
